name: Build and Release Mesa Git

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'  # Every day at 6AM UTC

permissions:
  contents: write

jobs:
  build-mesa:
    runs-on: ubuntu-latest
    container: fedora:rawhide
    outputs:
      mesa_commit: ${{ steps.mesa_info.outputs.commit }}

    env:
      MESA_INSTALL_DIR: /mesa-install

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          dnf -y update && \
          dnf -y install gcc gcc-c++ make automake autoconf libtool \
            meson ninja-build git wget python3-pyyaml \
            bison flex glslang cmake libglvnd-core-devel \
            libdrm-devel libX11-devel libXext-devel libXfixes-devel \
            libXrandr-devel libXxf86vm-devel libxcb-devel libxshmfence-devel \
            libva-devel libvdpau-devel wayland-devel wayland-protocols-devel \
            vulkan-headers vulkan-loader-devel expat-devel zlib-devel \
            elfutils-libelf-devel libunwind-devel python3-mako python3-ply llvm-devel clang-devel \
            zip unzip

      - name: Clone Mesa repo
        id: mesa_info
        run: |
          git clone https://gitlab.freedesktop.org/mesa/mesa.git
          cd mesa
          COMMIT=$(git rev-parse --short HEAD)
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT
          echo "Mesa commit: $COMMIT"

      - name: Configure Mesa build
        run: |
          cd mesa
          meson setup build \
            --prefix=$MESA_INSTALL_DIR \
            --libdir=lib64 \
            -Dgallium-drivers=radeonsi,softpipe,llvmpipe,zink \
            -Dvulkan-drivers=amd \
            -Dbuildtype=release || { echo "Meson setup failed. This may be a Mesa git issue."; exit 2; }

      - name: Build Mesa
        run: |
          cd mesa
          ninja -C build || { echo "Mesa build failed. This may be a Mesa git issue."; exit 2; }

      - name: Install Mesa
        run: |
          cd mesa
          ninja -C build install || { echo "Mesa install failed."; exit 2; }

      - name: Add metadata and helper
        run: |
          echo "Mesa Git Commit: ${{ steps.mesa_info.outputs.commit }}" > $MESA_INSTALL_DIR/build-info.txt
          echo "Build Date: $(date -u)" >> $MESA_INSTALL_DIR/build-info.txt
          if [ -f "$GITHUB_WORKSPACE/mesa-git" ]; then
            cp "$GITHUB_WORKSPACE/mesa-git" "$MESA_INSTALL_DIR/"
            chmod +x "$MESA_INSTALL_DIR/mesa-git"
          fi

      - name: Generate timestamp
        id: timestamp
        run: |
          TIMESTAMP=$(date -u +"%Y%m%d-%H%M%S")
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "Generated timestamp: $TIMESTAMP"

      - name: Archive Mesa build
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          cd $MESA_INSTALL_DIR
          zip -r $GITHUB_WORKSPACE/artifacts/mesa-git.zip .
          ls -la $GITHUB_WORKSPACE/artifacts/mesa-git.zip

      - name: Create Git tag and release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: mesa-${{ steps.timestamp.outputs.timestamp }}
          name: Mesa Git Build ${{ steps.timestamp.outputs.timestamp }}
          body: |
            Mesa Git Build
            
            **Mesa Commit:** ${{ steps.mesa_info.outputs.commit }}
            **Build Date:** ${{ steps.timestamp.outputs.timestamp }}
            
            This build contains the latest Mesa drivers compiled from the git repository.
          files: artifacts/mesa-git.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}